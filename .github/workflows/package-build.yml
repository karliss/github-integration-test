name: package build

on:
  push:
    branches:
    - master
    - f1
    tags:
    - v*
  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04] #[windows-2016]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: build linux
      if: contains(matrix.os, 'ubuntu')
      shell: bash
      run: |
        if [[ "${{ startsWith(github.event.ref, 'refs/tags')}}" = "true" ]]
        then
          PACKAGE_ID="${{ github.event.ref }}"
        else
          PACKAGE_ID="git-`date --iso-8601`-${{ format('{0}-', github.sha) }}"
        fi
        PACKAGE_ID=${PACKAGE_ID##refs/tags/}
        echo foo>$PACKAGE_ID
        echo UPLOAD_FILE=$PACKAGE_ID >> $GITHUB_ENV
        echo UPLOAD_ASSET_TYPE=text/plain >> $GITHUB_ENV
    - name: Get release
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      id: get_release
      uses: karliss/get-release@2d829e8b85df0f0d446505c26f53690531dcaaa3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload release assets
      if: steps.get_release.outputs.upload_url != null
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.UPLOAD_FILE }}
          asset_name: ${{ env.UPLOAD_FILE }}
          asset_content_type: ${{ env.UPLOAD_ASSET_TYPE }}